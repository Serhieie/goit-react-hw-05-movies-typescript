{"version":3,"file":"static/js/927.b947e306.chunk.js","mappings":"0LAAO,MAAMA,EAAmB,gCACnBC,EAAkB,2CAalBC,EAAmB,CAC9BC,OAAQ,MACRC,OAAQ,CACNC,SAAU,QACVC,KAAM,IACNC,eAAe,EACfC,SAAU,MAEZC,QAAS,CAAEC,OAAQ,oB,4DClBd,MAAMC,EAAaA,KACxBC,EAAAA,GAAAA,MAAY,qCAAsC,CAChDC,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WACP,EAGSC,EAAeA,KAC1BV,EAAAA,GAAAA,KAAW,qBAAsB,CAC/BC,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WACP,C,yHCtBJ,MAgCA,EAhCwDE,IAAwB,IAAvB,cAAEC,GAAeD,EACxE,MAAME,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6FAA4FC,SACvGL,EACEM,QAAOC,GAASA,EAAMC,cACtBC,KAAIF,IAAK,IAAAG,EAAA,OACRP,EAAAA,EAAAA,KAAA,MAEEC,UAAU,8CAA6CC,UAEvDM,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHR,UAAU,sBACVS,GAAE,WAAAC,OAAaP,EAAMQ,IACrBC,MAAO,CAAEC,KAAMhB,GAAWI,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,OACEe,QAAQ,OACRd,UAAU,0FACVe,IAAG,uCAAAL,OAAyCP,EAAMC,aAClDY,IAAKb,EAAMc,OAASd,EAAMe,MAAQ,eAClCC,MAAO,OAETpB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAAsBC,SACtB,QADsBK,EACjCH,EAAMc,aAAK,IAAAX,EAAAA,EAAIH,EAAMe,WAhBrBf,EAAMQ,GAmBR,KAEN,ECPT,EArB8ChB,IAAkB,IAAjB,QAAEyB,GAASzB,EACxD,OACEI,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAApB,UACImB,IACArB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CM,EAAAA,EAAAA,MAAA,KACEP,UAAU,0HAC0CC,SAAA,CACrD,QACO,KACNF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iFAAgFC,SAAC,SAEzF,IAAI,eAKjB,E,qBCZP,MAuBA,EAvB4CN,IAAuB,IAAtB,aAAE2B,GAAc3B,EAC3D,OACEI,EAAAA,EAAAA,KAACwB,EAAAA,GAAM,CAACC,cAAe,CAAEJ,QAAS,IAAMK,SAAUH,EAAarB,UAC7DM,EAAAA,EAAAA,MAACmB,EAAAA,GAAI,CAAC1B,UAAU,OAAMC,SAAA,EACpBF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJ3B,UAAU,oNAEV4B,KAAK,OACLV,KAAK,UACLW,YAAY,uBAEd9B,EAAAA,EAAAA,KAAA,UACE6B,KAAK,SACL5B,UAAU,yMACwDC,UAElEF,EAAAA,EAAAA,KAAC+B,EAAAA,IAAQ,CAACC,KAAM,WAGb,EC4Bb,EA/CyBC,KACvB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAkB,KACvCC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClClB,EAAUgB,EAAaG,IAAI,YAAc,IAE/CC,EAAAA,EAAAA,YAAU,KACR,MAWMC,GAAeC,EAAAA,EAAAA,WAXHC,UAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAU,GAADnC,OAC3BtC,EAAAA,GAAQ,uBAAAsC,OAAsBU,EAAO,KAAAV,OAAIrC,EAAAA,IAC5CC,EAAAA,IAEF4D,EAAUU,EAASE,KAAKC,QAG1B,CAFE,MAAOC,IACPjE,EAAAA,EAAAA,IACF,IAEuC,KAEzC,OADA0D,IACO,IAAMA,EAAaQ,QAAQ,GACjC,CAAC7B,IAEJ,MAOMxB,GAAgBsD,EAAAA,EAAAA,UAAQ,IACrBjB,EAAO/B,QAAQC,IAAY,IAAAG,EAAA,OACrB,QADqBA,EAChCH,EAAMc,aAAK,IAAAX,OAAA,EAAXA,EAAa6C,cAAcC,SAAShC,EAAQ+B,cAAc,KAE3D,CAAClB,EAAQb,IAEZ,OACEb,EAAAA,EAAAA,MAAA,WAASP,UAAU,4GAA2GC,SAAA,EAC5HF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,qBAGpEF,EAAAA,EAAAA,KAACsD,EAAS,CAAC/B,aAlBOgC,IACpB,IAAKA,EAAOlC,QACV,OAAO1B,EAAAA,EAAAA,KAET2C,EAAgB,CAAEjB,QAASkC,EAAOlC,SAAU,KAe1CrB,EAAAA,EAAAA,KAACwD,EAAS,CAACnC,QAASA,IACnBA,IAAWrB,EAAAA,EAAAA,KAACyD,EAAS,CAAC5D,cAAeA,MAC9B,C","sources":["constants/constants.ts","helpers/toasts.js","pages/Movies/MoviesList.tsx","pages/Movies/MoviesText.tsx","pages/Movies/MovieForm.tsx","pages/Movies/Movies.tsx"],"sourcesContent":["export const BASE_URL: string = 'https://api.themoviedb.org/3/';\nexport const API_KEY: string = 'api_key=713cb35a39a71866f61c58ef1cecbe50';\n\ninterface Options {\n  method: string;\n  params: {\n    language: string;\n    page: string;\n    include_adult: boolean;\n    per_page: string;\n  };\n  headers: { accept: string };\n}\n\nexport const options: Options = {\n  method: 'GET',\n  params: {\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  },\n  headers: { accept: 'application/json' },\n};\n","import { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const errorToast = () => {\n  toast.error('Sorry but this element is not full', {\n    position: 'top-right',\n    autoClose: 1200,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n};\n\nexport const warningToast = () => {\n  toast.warn('Enter movie titile', {\n    position: 'top-right',\n    autoClose: 1200,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n};\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport React from 'react';\nimport { Movie } from '../Home/Home.types';\n\nconst MovieList: React.FC<{ visibleMovies: Movie[] }> = ({ visibleMovies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"grid md:grid-cols-2 sm2:grid-cols-4 grid-cols-5 w-11/12 mx-auto gap-3 min-h-[450px] h-full\">\n      {visibleMovies\n        .filter(movie => movie.poster_path)\n        .map(movie => (\n          <li\n            key={movie.id}\n            className=\"transition-all duration-300 hover:scale-105\"\n          >\n            <Link\n              className=\"flex flex-col gap-1\"\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <img\n                loading=\"lazy\"\n                className=\"rounded-sm overflow-hidden object-cover lg:max-h-[190px] max-h-[320px] md:max-h-[300px]\"\n                src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                alt={movie.title || movie.name || 'Movie Poster'}\n                width={250}\n              />\n              <h3 className=\"text-xs md:text-base\">\n                {movie.title ?? movie.name}\n              </h3>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default MovieList;\n","import React from 'react';\n\ninterface MoviesTextProps {\n  movieId: string;\n}\n\nconst MoviesText: React.FC<MoviesTextProps> = ({ movieId }) => {\n  return (\n    <>\n      {!movieId && (\n        <div className=\"transform -skew-y-6 w-10/12\">\n          <p\n            className=\"text-[200px] text-blue-100 text-center font-h1Font leading-[0.65]\n          md:text-[100px] md:mt-12 sm2:text-[160px] select-none\"\n          >\n            Enjoy{' '}\n            <span className=\"bg-gradient-to-r from-blue-200 to-blue-800 text-transparent bg-clip-text z-100\">\n              your\n            </span>{' '}\n            choise\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MoviesText;\n","import { Formik, Form, Field, FormikHelpers } from 'formik';\nimport { IoSearch } from 'react-icons/io5';\nimport React from 'react';\n\ninterface MovieFormProps {\n  handleSubmit: (\n    values: { movieId: string },\n    actions: FormikHelpers<{ movieId: string }>\n  ) => void;\n}\n\nconst MovieForm: React.FC<MovieFormProps> = ({ handleSubmit }) => {\n  return (\n    <Formik initialValues={{ movieId: '' }} onSubmit={handleSubmit}>\n      <Form className=\"flex\">\n        <Field\n          className=\"bg-blue-200 px-6 py-2 text-blue-900 md:mb-6 mb-16 w-full max-w-[400px] placeholder:text-blue-900\n            placeholder:opacity-60 placeholder:font-thin outline-none text-xl md:max-w-[260px] rounded-tl-3xl rounded-bl-3xl\"\n          type=\"text\"\n          name=\"movieId\"\n          placeholder=\"Enter movie title\"\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-900 transition-all duration-300 hover:bg-blue-700 border border-blue-900 hover:border-blue-700 h-[44px] text-center  w-[50px] \n            rounded-tr-3xl rounded-br-3xl flex justify-center items-center \"\n        >\n          <IoSearch size={22} />\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default MovieForm;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL, options } from '../../constants/constants.ts';\nimport { errorToast, warningToast } from '../../helpers/toasts.js';\nimport { debounce } from 'lodash';\nimport MovieList from './MoviesList.tsx';\nimport MovieText from './MoviesText.tsx';\nimport MovieForm from './MovieForm.tsx';\nimport { Movie } from '../Home/Home.types.ts';\n\nconst Movies: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') || '';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}search/movie?query=${movieId}&${API_KEY}`,\n          options\n        );\n        setMovies(response.data.results);\n      } catch (error) {\n        errorToast();\n      }\n    };\n    const delayedQuery = debounce(fetchData, 300);\n    delayedQuery();\n    return () => delayedQuery.cancel();\n  }, [movieId]);\n\n  const handleSubmit = (values: { movieId: string }) => {\n    if (!values.movieId) {\n      return warningToast();\n    }\n    setSearchParams({ movieId: values.movieId });\n  };\n\n  const visibleMovies = useMemo(() => {\n    return movies.filter((movie: Movie) =>\n      movie.title?.toLowerCase().includes(movieId.toLowerCase())\n    );\n  }, [movies, movieId]);\n\n  return (\n    <section className=\"mx-auto mt-28 flex justify-center items-center flex-col bg-gradient-to-t via-blue-950 from-black to-black\">\n      <h2 className=\"font-h1Font text-4xl mb-2 text-blue-100 md:text-2xl\">\n        Find your Movie\n      </h2>\n      <MovieForm handleSubmit={handleSubmit} />\n      <MovieText movieId={movieId} />\n      {movieId && <MovieList visibleMovies={visibleMovies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","options","method","params","language","page","include_adult","per_page","headers","accept","errorToast","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","warningToast","_ref","visibleMovies","location","useLocation","_jsx","className","children","filter","movie","poster_path","map","_movie$title","_jsxs","Link","to","concat","id","state","from","loading","src","alt","title","name","width","movieId","_Fragment","handleSubmit","Formik","initialValues","onSubmit","Form","Field","type","placeholder","IoSearch","size","Movies","movies","setMovies","useState","searchParams","setSearchParams","useSearchParams","get","useEffect","delayedQuery","debounce","async","response","axios","data","results","error","cancel","useMemo","toLowerCase","includes","MovieForm","values","MovieText","MovieList"],"sourceRoot":""}